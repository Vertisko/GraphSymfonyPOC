"""A animal interface"""
type Animal {
  """The id of the animal"""
  id: ID!

  """The name of the animal"""
  name: String!

  """Breed of the animal"""
  breed: String!
}

scalar BirthDate

input CarInput {
  id: ID!
  manufacturer: String!
  model: String!
  seats_number: Int!
}

scalar DateTime

input IdInput {
  id: String!
}

type Mutation {
  deleteVehicleMutation(input: IdInput!): ID!
  createCarMutation(input: CarInput!): Vehicle!
  updateCarMutation(input: CarInput!): Vehicle!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""Person manage by the app"""
type Person {
  """Internal identifier"""
  id: ID!

  """Name of the person"""
  name: String!

  """Title of the person"""
  title: PersonTitle!

  """Birth date of the person"""
  birthDate: BirthDate

  """Date of creation of the person in database"""
  createdAt: DateTime!

  """Vehicles of the person"""
  vehicles: [Vehicle]

  """Pet of the person"""
  pet: Animal
}

"""Title of a person"""
enum PersonTitle {
  unknown
  Miss
  Mrs
  Ms
  Mr
}

type Query {
  allPersons(
    """Get X last elements of collection"""
    last: Int
  ): [Person]
  person(
    """Resolves person using its id."""
    id: ID!
  ): Person
  vehicles(
    after: String
    first: Int

    """Resolves vehicle using its owner id."""
    owner: ID

    """Resolves vehicle using its id."""
    id: String
  ): VehicleConnection
  vehicle(
    """Resolves person using its id."""
    id: ID!
  ): Vehicle
}

"""Vehicle"""
type Vehicle {
  """The id of the vehicle"""
  id: ID!

  """The manufacturer of the vehicle"""
  manufacturer: String!

  """The model of the vehicle"""
  model: String!

  """Type of vehicle"""
  class: String!
}

"""A connection to a list of items."""
type VehicleConnection {
  """Number of items in the connection"""
  totalCount: Int

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """Information to aid in pagination."""
  edges: [VehicleEdge]
}

"""An edge in a connection."""
type VehicleEdge {
  """The item at the end of the edge."""
  node: Vehicle

  """A cursor for use in pagination."""
  cursor: String!
}
